-- –ü–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è Storage Bucket: task-proofs
-- –≠—Ç–∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç –¥–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ç–æ-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á
-- 
-- ‚ö†Ô∏è –í–ê–ñ–ù–û: –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ü–û–°–õ–ï —Å–æ–∑–¥–∞–Ω–∏—è bucket 'task-proofs'

-- ========================================
-- –≠–¢–ê–ü 1: –£–î–ê–õ–ï–ù–ò–ï –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –ü–û–õ–ò–¢–ò–ö
-- ========================================

-- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
DROP POLICY IF EXISTS "task_proofs_upload_policy" ON storage.objects;
DROP POLICY IF EXISTS "task_proofs_select_policy" ON storage.objects;
DROP POLICY IF EXISTS "task_proofs_update_policy" ON storage.objects;
DROP POLICY IF EXISTS "task_proofs_delete_policy" ON storage.objects;

-- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫ (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —Å–æ–∑–¥–∞–≤–∞–ª–∏—Å—å —Ä–∞–Ω—å—à–µ)
DROP POLICY IF EXISTS "task_proofs_upload" ON storage.objects;
DROP POLICY IF EXISTS "task_proofs_select" ON storage.objects;
DROP POLICY IF EXISTS "task_proofs_update" ON storage.objects;
DROP POLICY IF EXISTS "task_proofs_delete" ON storage.objects;

SELECT 'CLEANUP_COMPLETED' as status, '–°—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ —É–¥–∞–ª–µ–Ω—ã' as message;

-- ========================================
-- –≠–¢–ê–ü 2: –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–ò–¢–ò–ö –î–û–°–¢–£–ü–ê
-- ========================================

-- 2.1) –ü–æ–ª–∏—Ç–∏–∫–∞ UPLOAD - –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤
-- –†–∞–∑—Ä–µ—à–∞–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–∞–π–ª—ã
CREATE POLICY "task_proofs_upload_policy" ON storage.objects
  FOR INSERT 
  TO authenticated
  WITH CHECK (
    bucket_id = 'task-proofs' 
    AND auth.role() = 'authenticated'
  );

-- 2.2) –ü–æ–ª–∏—Ç–∏–∫–∞ SELECT - –ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–æ—Ç–æ-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤  
-- –†–∞–∑—Ä–µ—à–∞–µ—Ç –í–°–ï–ú –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ (–¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π –∏ –¥–µ—Ç–µ–π)
CREATE POLICY "task_proofs_select_policy" ON storage.objects
  FOR SELECT 
  TO public
  USING (bucket_id = 'task-proofs');

-- 2.3) –ü–æ–ª–∏—Ç–∏–∫–∞ UPDATE - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
-- –†–∞–∑—Ä–µ—à–∞–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞–º —Ñ–∞–π–ª–æ–≤ –æ–±–Ω–æ–≤–ª—è—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
CREATE POLICY "task_proofs_update_policy" ON storage.objects
  FOR UPDATE 
  TO authenticated
  USING (
    bucket_id = 'task-proofs' 
    AND auth.uid() = owner::uuid
  )
  WITH CHECK (
    bucket_id = 'task-proofs' 
    AND auth.uid() = owner::uuid
  );

-- 2.4) –ü–æ–ª–∏—Ç–∏–∫–∞ DELETE - –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
-- –†–∞–∑—Ä–µ—à–∞–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞–º —Ñ–∞–π–ª–æ–≤ —É–¥–∞–ª—è—Ç—å —Å–≤–æ–∏ —Ñ–æ—Ç–æ
CREATE POLICY "task_proofs_delete_policy" ON storage.objects
  FOR DELETE 
  TO authenticated
  USING (
    bucket_id = 'task-proofs' 
    AND auth.uid() = owner::uuid
  );

SELECT 'POLICIES_CREATED' as status, '–ü–æ–ª–∏—Ç–∏–∫–∏ Storage —Å–æ–∑–¥–∞–Ω—ã' as message;

-- ========================================
-- –≠–¢–ê–ü 3: –ü–†–û–í–ï–†–ö–ê BUCKET –ò –ù–ê–°–¢–†–û–ï–ö
-- ========================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ bucket
SELECT 'BUCKET_CHECK' as check_type,
       CASE 
         WHEN EXISTS (SELECT 1 FROM storage.buckets WHERE id = 'task-proofs') 
         THEN 'Bucket task-proofs —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚úÖ'
         ELSE 'Bucket task-proofs –ù–ï –ù–ê–ô–î–ï–ù ‚ùå'
       END as status;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ bucket
SELECT 'BUCKET_SETTINGS' as check_type,
       id as bucket_name,
       public as is_public,
       file_size_limit,
       allowed_mime_types
FROM storage.buckets 
WHERE id = 'task-proofs';

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
SELECT 'STORAGE_POLICIES' as check_type,
       policyname,
       cmd as operation,
       CASE 
         WHEN qual IS NOT NULL THEN '–° —É—Å–ª–æ–≤–∏—è–º–∏'
         ELSE '–ë–µ–∑ —É—Å–ª–æ–≤–∏–π'
       END as conditions
FROM pg_policies 
WHERE schemaname = 'storage' 
  AND tablename = 'objects'
  AND policyname LIKE '%task_proofs%'
ORDER BY policyname;

SELECT 'STORAGE_SETUP_COMPLETED' as status, 
       'Storage –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è task-proofs –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã! üì¶' as message;

-- ========================================
-- –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û)
-- ========================================

/*
–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –û–ü–¶–ò–ò –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ bucket:

1. üìè –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10MB):
UPDATE storage.buckets 
SET file_size_limit = 10485760 
WHERE id = 'task-proofs';

2. üñºÔ∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤ (—Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è):
UPDATE storage.buckets 
SET allowed_mime_types = ARRAY['image/jpeg', 'image/png', 'image/gif', 'image/webp']
WHERE id = 'task-proofs';

3. üîê –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞:
-- –¢–æ–ª—å–∫–æ —á–ª–µ–Ω—ã —Å–µ–º—å–∏ –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å —Ñ–æ—Ç–æ —Å–≤–æ–µ–π —Å–µ–º—å–∏
CREATE POLICY "task_proofs_family_only" ON storage.objects
  FOR SELECT 
  TO authenticated
  USING (
    bucket_id = 'task-proofs' 
    AND EXISTS (
      SELECT 1 FROM public.tasks t
      JOIN public.users u ON t.family_id = u.family_id
      WHERE u.id = auth.uid()
        AND t.proof_url LIKE '%' || objects.name || '%'
    )
  );

4. üóÇÔ∏è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –ø–æ –ø–∞–ø–∫–∞–º:
-- –°—Ç—Ä—É–∫—Ç—É—Ä–∞: task-proofs/family_id/task_id/filename
-- –ü—Ä–∏–º–µ—Ä –ø—É—Ç–∏: task-proofs/123e4567-e89b-12d3-a456-426614174000/789e0123-e89b-12d3-a456-426614174001/proof.jpg

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –í –ö–û–î–ï:

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
const filePath = `${familyId}/${taskId}/${file.name}`
const { data, error } = await supabase.storage
  .from('task-proofs')
  .upload(filePath, file)

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–π —Å—Å—ã–ª–∫–∏
const { data: { publicUrl } } = supabase.storage
  .from('task-proofs')
  .getPublicUrl(filePath)
*/
